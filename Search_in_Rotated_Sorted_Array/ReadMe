
Q	Suppose a sorted array is rotated at some pivot unknown to you beforehand.

	(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

	You are given a target value to search. If found in the array return its index, otherwise return -1.

	You may assume no duplicate exists in the array.

A	very diffcult

	A[low], ... , A[high]

	mid = (low + high)/2;

	if(A[low] < A[mid]) means A[low], ... , A[mid] in increasing seq, 
		and A[mid+1], ... , A[high] in increasing firstly and decreasing secondly.

		so: if(A[low] < target && target < A[mid]) means target is the first part: A[low], ... , A[mid]
													we can set high = mid - 1;
			else means target is the second part: A[mid+1], ... , A[high]
													we can set low = mid + 1;


	else	means A[low], ,,, , A[mid] in increasing firstly and decreasing secondly
		and A[mid+1], ... , A[high] in increasing seq.

		so: if(A[mid] < target && target < A[high]) means target is the second part: A[mid+1], ... , A[high]
													we can set low = mid + 1;
			else means target is the first part: A[low], ... , A[mid-1]
													we can set high = mid - 1;
	
